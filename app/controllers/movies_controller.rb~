class MoviesController < ApplicationController

  def show
    id = params[:id] # retrieve movie ID from URI route
    @movie = Movie.find(id) # look up movie by unique ID
    # will render app/views/movies/show.<extension> by default
  end

  def index
   @all_ratings = Movie.all_ratings
	 #all_ratings now have access to G, PG, PG-13, etc.
redirect = false
   if session[:ratings] == nil
	session[:ratings] = Hash.new(true)
	@all_ratings.each do |rating|
		session[:ratings][rating] = '4'
	end
   end

   #checking if params has a key :ratings
   if params.has_key?(:ratings)
	session[:ratings] = params[:ratings]
   end

   #checking if params has a key :sort_order
   if params.has_key?(:sort_order)
	session[:sort_order] = params[:sort_order]
   end



   s_ratings = session[:ratings]
   s_order = session[:sort_order]
   p_ratings = params[:ratings]
   p_order = params[:sort_order]
    

   if session[:sort_order] and (!params.has_key?(:ratings) or !	   params.has_key?(:sort_order))
	redirect = true
   end

   if session[:sort_order] == 'release_date'
	@movies = Movie.find(:all, :order => 'release_date ASC', :conditions => ["rating in (?)", s_ratings.keys])
	@release_date_class = 'hilite'

   elsif session[:sort_order] == 'title'
	@movies = Movie.find(:all, :order => 'title ASC', :conditions => ["rating in (?)", s_ratings.keys])
	@title_class = 'hilite'

   else
	@movies = Movie.find(:all, :conditions => ["rating in (?)", s_ratings.keys])

   end

   
   if redirect
      flash.keep
      redirect_to movies_path({:sort_order => session  [:sort_order], :ratings => session[:ratings]})
   end

   @checked_ratings = Hash.new(true)
   @all_ratings.each do |rating|
	@checked_Ratings[rating] = s_ratings.include?(rating)
   end

  end



  def new
    # default: render 'new' template
  end

  def create
    @movie = Movie.create!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully created."
    redirect_to movies_path
  end

  def edit
    @movie = Movie.find params[:id]
  end

  def update
    @movie = Movie.find params[:id]
    @movie.update_attributes!(params[:movie])
    flash[:notice] = "#{@movie.title} was successfully updated."
    redirect_to movie_path(@movie)
  end

  def destroy
    @movie = Movie.find(params[:id])
    @movie.destroy
    flash[:notice] = "Movie '#{@movie.title}' deleted."
    redirect_to movies_path
  end

end
